{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Personal Projects\\\\React\\\\next\\\\pages\\\\characters.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/Layout';\nimport AddCharacter from '../components/AddCharacter';\nimport CharactersComponent from '../components/Characters';\nimport { useState } from 'react';\nimport Fetch from 'isomorphic-unfetch';\nimport Character from '../components/Character';\n\nconst Characters = props => {\n  const {\n    0: charactersList,\n    1: setCharacters\n  } = useState([{\n    id: 1,\n    name: \"Alex\",\n    type: \"Wizard\",\n    str: \"10\",\n    dex: \"8\",\n    con: \"12\",\n    int: \"18\",\n    wis: \"14\",\n    cha: \"16\"\n  }, {\n    id: 2,\n    name: \"Kim\",\n    type: \"Cleric\",\n    str: \"16\",\n    dex: \"8\",\n    con: \"14\",\n    int: \"10\",\n    wis: \"18\",\n    cha: \"12\"\n  }, {\n    id: 3,\n    name: \"Kitty\",\n    type: \"Fighter\",\n    str: \"18\",\n    dex: \"14\",\n    con: \"16\",\n    int: \"8\",\n    wis: \"10\",\n    cha: \"12\"\n  }, {\n    id: 4,\n    name: \"Logan\",\n    type: \"Rogue\",\n    str: \"8\",\n    dex: \"18\",\n    con: \"14\",\n    int: \"10\",\n    wis: \"12\",\n    cha: \"16\"\n  }]); //Add Character\n\n  const addChracter = (name, type, str, dex, con, wis, int, cha) => {\n    const id = Math.floor(Math.random() * 100000) + 1;\n\n    const newCharacter = _objectSpread({\n      id\n    }, name);\n\n    setCharacters([...charactersList, newCharacter]);\n    console.log(name);\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"name\": name.name,\n      \"type\": name.type,\n      \"str\": parseInt(name.str),\n      \"dex\": parseInt(name.dex),\n      \"con\": parseInt(name.con),\n      \"wis\": parseInt(name.wis),\n      \"int\": parseInt(name.int),\n      \"cha\": parseInt(name.cha)\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:5000/charactersheets/add\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    fetch(\"http://localhost:5000/charactersheets\").then(res => console.log(res)).catch(error => console.log('error', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddCharacter, {\n        onAdd: addChracter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CharactersComponent, {\n        charactersList: props.characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\nCharacters.getInitialProps = async function () {\n  const res = await fetch(\"http://localhost:5000/charactersheets\");\n  const data = await res.json();\n  console.log(data);\n  return {\n    characters: data\n  };\n};\n\nexport default Characters;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/Personal Projects/React/next/pages/characters.js"],"names":["Layout","AddCharacter","CharactersComponent","useState","Fetch","Character","Characters","props","charactersList","setCharacters","id","name","type","str","dex","con","int","wis","cha","addChracter","Math","floor","random","newCharacter","console","log","myHeaders","Headers","append","raw","JSON","stringify","parseInt","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","catch","error","res","characters","getInitialProps","data","json"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\r\nimport AddCharacter from '../components/AddCharacter'\r\nimport CharactersComponent from '../components/Characters'\r\nimport { useState } from 'react';\r\nimport Fetch from 'isomorphic-unfetch';\r\nimport Character from '../components/Character';\r\n\r\n\r\n\r\nconst Characters = (props) => {\r\n    const [charactersList, setCharacters] = useState([\r\n        {\r\n            id: 1,\r\n            name: \"Alex\",\r\n            type: \"Wizard\",\r\n            str: \"10\",\r\n            dex: \"8\",\r\n            con: \"12\",\r\n            int: \"18\",\r\n            wis: \"14\",\r\n            cha: \"16\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Kim\",\r\n            type: \"Cleric\",\r\n            str: \"16\",\r\n            dex: \"8\",\r\n            con: \"14\",\r\n            int: \"10\",\r\n            wis: \"18\",\r\n            cha: \"12\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Kitty\",\r\n            type: \"Fighter\",\r\n            str: \"18\",\r\n            dex: \"14\",\r\n            con: \"16\",\r\n            int: \"8\",\r\n            wis: \"10\",\r\n            cha: \"12\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Logan\",\r\n            type: \"Rogue\",\r\n            str: \"8\",\r\n            dex: \"18\",\r\n            con: \"14\",\r\n            int: \"10\",\r\n            wis: \"12\",\r\n            cha: \"16\"\r\n        },\r\n    ]);\r\n\r\n    //Add Character\r\n    const addChracter = (name, type, str, dex, con, wis, int, cha) => {\r\n        const id = Math.floor(Math.random() *100000) +1;\r\n        const newCharacter = {id, ...name};\r\n        setCharacters([...charactersList, newCharacter]);\r\n\r\n        console.log(name)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify(\r\n            {\r\n                \"name\": name.name, \r\n                \"type\": name.type, \r\n                \"str\": parseInt(name.str), \r\n                \"dex\": parseInt(name.dex), \r\n                \"con\": parseInt(name.con), \r\n                \"wis\": parseInt(name.wis), \r\n                \"int\": parseInt(name.int), \r\n                \"cha\": parseInt(name.cha)\r\n            });\r\n\r\n        var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/charactersheets/add\", requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error));\r\n\r\n        fetch(\"http://localhost:5000/charactersheets\")\r\n            .then(res => console.log(res))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <div>\r\n                <AddCharacter onAdd = {addChracter} />\r\n                <h1>Characters</h1>\r\n                <CharactersComponent charactersList= {props.characters}/>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nCharacters.getInitialProps = async function() {\r\n    const res = await fetch(\"http://localhost:5000/charactersheets\");\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {characters:data}\r\n}\r\n\r\nexport default Characters"]},"metadata":{},"sourceType":"module"}