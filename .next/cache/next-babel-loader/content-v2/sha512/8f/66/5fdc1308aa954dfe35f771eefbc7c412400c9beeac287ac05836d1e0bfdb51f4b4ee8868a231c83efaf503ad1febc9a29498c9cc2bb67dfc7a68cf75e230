{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Alex/Desktop/Personal Projects/React/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Alex/Desktop/Personal Projects/React/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/Alex/Desktop/Personal Projects/React/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/Alex/Desktop/Personal Projects/React/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Personal Projects\\\\React\\\\next\\\\pages\\\\characters.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport AddCharacter from '../components/AddCharacter';\nimport CharactersComponent from '../components/Characters';\nimport { useState } from 'react';\nimport Fetch from 'isomorphic-unfetch';\nimport Character from '../components/Character';\n\nvar Characters = function Characters(props) {\n  _s();\n\n  var _useState = useState([{\n    id: 1,\n    name: \"Alex\",\n    type: \"Wizard\",\n    str: \"10\",\n    dex: \"8\",\n    con: \"12\",\n    \"int\": \"18\",\n    wis: \"14\",\n    cha: \"16\"\n  }, {\n    id: 2,\n    name: \"Kim\",\n    type: \"Cleric\",\n    str: \"16\",\n    dex: \"8\",\n    con: \"14\",\n    \"int\": \"10\",\n    wis: \"18\",\n    cha: \"12\"\n  }, {\n    id: 3,\n    name: \"Kitty\",\n    type: \"Fighter\",\n    str: \"18\",\n    dex: \"14\",\n    con: \"16\",\n    \"int\": \"8\",\n    wis: \"10\",\n    cha: \"12\"\n  }, {\n    id: 4,\n    name: \"Logan\",\n    type: \"Rogue\",\n    str: \"8\",\n    dex: \"18\",\n    con: \"14\",\n    \"int\": \"10\",\n    wis: \"12\",\n    cha: \"16\"\n  }]),\n      charactersList = _useState[0],\n      setCharacters = _useState[1]; //Add Character\n\n\n  var addChracter = function addChracter(name, type, str, dex, con, wis, _int, cha) {\n    var id = Math.floor(Math.random() * 100000) + 1;\n\n    var newCharacter = _objectSpread({\n      id: id\n    }, name);\n\n    setCharacters([].concat(_toConsumableArray(charactersList), [newCharacter]));\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"name\": \"kim\",\n      \"type\": type,\n      \"str\": parseInt(str),\n      \"dex\": parseInt(dex),\n      \"con\": parseInt(con),\n      \"wis\": parseInt(wis),\n      \"int\": parseInt(_int),\n      \"cha\": parseInt(cha)\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:5000/charactersheets/add\", requestOptions).then(function (response) {\n      return response.text();\n    }).then(function (result) {\n      return console.log(result);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddCharacter, {\n        onAdd: addChracter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CharactersComponent, {\n        charactersList: props.characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Characters, \"ZzK/jcR0jtG+tM0pTBHsFWAJpJ8=\");\n\n_c = Characters;\nCharacters.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:5000/charactersheets\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            characters: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["C:/Users/Alex/Desktop/Personal Projects/React/next/pages/characters.js"],"names":["Layout","AddCharacter","CharactersComponent","useState","Fetch","Character","Characters","props","id","name","type","str","dex","con","wis","cha","charactersList","setCharacters","addChracter","int","Math","floor","random","newCharacter","myHeaders","Headers","append","raw","JSON","stringify","parseInt","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","error","characters","getInitialProps","res","json","data"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\r\nimport AddCharacter from '../components/AddCharacter'\r\nimport CharactersComponent from '../components/Characters'\r\nimport { useState } from 'react';\r\nimport Fetch from 'isomorphic-unfetch';\r\nimport Character from '../components/Character';\r\n\r\n\r\n\r\nconst Characters = (props) => {\r\n    const [charactersList, setCharacters] = useState([\r\n        {\r\n            id: 1,\r\n            name: \"Alex\",\r\n            type: \"Wizard\",\r\n            str: \"10\",\r\n            dex: \"8\",\r\n            con: \"12\",\r\n            int: \"18\",\r\n            wis: \"14\",\r\n            cha: \"16\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Kim\",\r\n            type: \"Cleric\",\r\n            str: \"16\",\r\n            dex: \"8\",\r\n            con: \"14\",\r\n            int: \"10\",\r\n            wis: \"18\",\r\n            cha: \"12\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Kitty\",\r\n            type: \"Fighter\",\r\n            str: \"18\",\r\n            dex: \"14\",\r\n            con: \"16\",\r\n            int: \"8\",\r\n            wis: \"10\",\r\n            cha: \"12\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Logan\",\r\n            type: \"Rogue\",\r\n            str: \"8\",\r\n            dex: \"18\",\r\n            con: \"14\",\r\n            int: \"10\",\r\n            wis: \"12\",\r\n            cha: \"16\"\r\n        },\r\n    ]);\r\n\r\n    //Add Character\r\n    const addChracter = (name, type, str, dex, con, wis, int, cha) => {\r\n        const id = Math.floor(Math.random() *100000) +1;\r\n        const newCharacter = {id, ...name};\r\n        setCharacters([...charactersList, newCharacter]);\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify(\r\n            {\r\n                \"name\": \"kim\", \r\n                \"type\": type, \r\n                \"str\": parseInt(str), \r\n                \"dex\": parseInt(dex), \r\n                \"con\": parseInt(con), \r\n                \"wis\": parseInt(wis), \r\n                \"int\": parseInt(int), \r\n                \"cha\": parseInt(cha)\r\n            });\r\n\r\n        var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/charactersheets/add\", requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <div>\r\n                <AddCharacter onAdd = {addChracter} />\r\n                <h1>Characters</h1>\r\n                <CharactersComponent charactersList= {props.characters}/>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nCharacters.getInitialProps = async function() {\r\n    const res = await fetch(\"http://localhost:5000/charactersheets\");\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {characters:data}\r\n}\r\n\r\nexport default Characters"]},"metadata":{},"sourceType":"module"}